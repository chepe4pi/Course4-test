services:
  app:
    container_name: 'app-container' # чтобы пересоздание происходило быстрее и не оставляло хвостов
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./course4-app:/course4-app # монтируем локальную директорию
      # в докер контейнер, чтобы не ребилдить при изменениях
    command: > # только для разработки - не gunicorn 
      sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=securepass
    depends_on: # стартует после этого, и закрывается если database упадет
      - database

  database:
    image: postgres:14.6-alpine
    volumes:
      - db-data-folder:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=securepass

  redis:
    image: redis:7.0.5-alpine
    container_name: redis
    hostname: redis

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./course4-app:/course4-app
    links:
      - redis
    depends_on:
      - redis

volumes:
  db-data-folder: